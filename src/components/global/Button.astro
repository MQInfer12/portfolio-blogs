---
interface Props {
  text: string;
  identifier: string;
  primary?: boolean;
  white?: boolean;
  gray?: boolean;
  disabled?: boolean;
  noEvents?: boolean;
}

const { text, primary, white, gray, disabled, identifier, noEvents }: Props =
  Astro.props;
---

<button
  class:list={[
    "button",
    { "primary-button": primary, "white-button": white, gray, noEvents },
  ]}
  id={identifier}
  disabled={disabled}
>
  <slot name="left" />{text}<slot name="right" />
</button>

<style lang="scss">
  @import "/src/styles/variables";

  .button {
    cursor: pointer;
    --padding-left: 1.5rem;
    padding: 0.75rem var(--padding-left);
    border-radius: 0.25rem;
    font-size: 1rem;
    font-weight: 500;
    text-decoration: none;
    color: $black;
    width: max-content;
    display: flex;
    gap: 0.75rem;
    align-items: center;
    transition: all 0.3s;
    position: relative;

    &::after {
      content: "";
      position: absolute;
      width: calc(100% - calc(2 * var(--padding-left)));
      left: var(--padding-left);
      scale: 0;
      transform-origin: right;
      bottom: 30%;
      border-bottom: 1px solid $black;
      transition: scale 0.3s;
    }
    &:hover::after {
      scale: 1;
      transform-origin: left;
    }
    &:disabled {
      user-select: none;
      pointer-events: none;
      filter: grayscale(1);
    }
  }

  .primary-button {
    background-color: $primary-500;
    border: 1px solid $primary-500;
    color: $white;

    &::after {
      content: unset;
    }
    &:hover {
      background-color: $primary-600;
      border: 1px solid $primary-600;
    }
  }

  .white-button {
    border: 1px solid $primary-500;
    color: $primary-500;

    &::after {
      content: unset;
    }
    &:hover {
      border: 1px solid $primary-600;
      color: $primary-600;
    }
  }

  .gray {
    color: $gray-50;
    font-weight: 400;

    &::after {
      border-bottom: 1px solid $gray-50;
    }
  }

  .button:active.noEvents {
    pointer-events: none;
  }
</style>
